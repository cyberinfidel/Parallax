import scene_cont
import PB_templates
from vector import Vec3
import graphics

scenes = {
	'meet the bunnies':{
		"playing": False,
		"entities": {
			'director': {
				'template': 'director',
				'init': """import PB_directors
self.controller_data.events = PB_directors.director_meet(self.game)
"""
			},
		},
		'templates': {
		},
	},
	'title':{
		"playing": False,
		"entities":{
			'director': {
				'template': 'director',
				'init': """import PB_directors
self.controller_data.events = PB_directors.director_title(self.game)
"""
			}
		},
		'templates': {
		},
	},
	'goodbye':{
		'playing':False,
		'entities': {
			'director':{
				'template': 'director',
				'init': "import PB_directors\n"
								"self.controller_data.events = PB_directors.director_quit(self.game)"
			},
		},
	},
	'high scores':{
		"playing": False,
		"entities": {
			'director': {
				'template': 'director',
				'init': "import PB_directors\n"
								"self.controller_data.events = PB_directors.director_high_scores(self.game)"
			}
		},
		'templates': {
		},
	},
	'select bunnies':{
		"playing": False,
		"entities": {
			'select bunnies cont': {
				'template': 'select bunnies cont',
				'init': "self.setGamePad(self.game.input.getGamePad(0))"
			},
			'pacbun choose':{
				'template': 'pacbun choose',
				'init': "from graphics import Color\n"
								"self.setPos(Vec3(130,200,0))\n"
								"self.setParent(self.game.getEntityByName('bunny choice'))\n"
								"self.controller_data.bun=0\n"
								"self.controller_data.bun_name='pacbun'\n"
								"self.controller_data.bun_color=Color(1,1,0,1)\n",
				'data': {
					'pos': Vec3(130,200,0),
					'parent': 'bunny choice',
					'bun num': 0,
					'bun name':'pacbun',
					'bun show name': 'PacBun',
					'message color': graphics.Color(1,1,0,1),
				}
			},
			'pinkie choose': {
				'template': 'pinkie choose',
				'init': "from graphics import Color\n"
								"self.setPos(Vec3(150,200,0))\n"
								"self.setParent(self.game.getEntityByName('bunny choice'))\n"
								"self.controller_data.bun=1\n"
								"self.controller_data.bun_name='pinkie'\n"
								"self.controller_data.bun_color=Color(1,0.8,0.8)\n"
			},
			'blue choose': {
				'template': 'blue choose',
				'init': "from graphics import Color\n"
								"self.setPos(Vec3(170,200,0))\n"
								"self.setParent(self.game.getEntityByName('bunny choice'))\n"
								"self.controller_data.bun=2\n"
								"self.controller_data.bun_name='blue'\n"
								"self.controller_data.bun_color=Color(0.5,0.5,1.0,1)\n"
			},
			'bowie choose': {
				'template': 'bowie choose',
				'init': "from graphics import Color\n"
								"self.setPos(Vec3(190,200,0))\n"
								"self.setParent(self.game.getEntityByName('bunny choice'))\n"
								"self.controller_data.bun=3\n"
								"self.controller_data.bun_name='bowie'\n"
								"self.controller_data.bun_color=Color(1.0,1.0,1.0)\n"
			},
		}, # entities
		'templates':{
			'select bunnies cont': {
				'controller': scene_cont.makeSelectBunniesController,
			},
			'pacbun choose': {
				'controller': scene_cont.makeBunnyChooseController,
				'graphics': {'component': PB_templates.components['graphics']['pacbun_graphics'], 'render layer': 'game'},
			},
			'pinkie choose': {
				'controller': scene_cont.makeBunnyChooseController,
				'graphics': {'component': PB_templates.components['graphics']['pinkie_graphics'], 'render layer': 'game'},
			},
			'blue choose': {
				'controller': scene_cont.makeBunnyChooseController,
				'graphics': {'component': PB_templates.components['graphics']['blue_graphics'], 'render layer': 'game'},
			},
			'bowie choose': {
				'controller': scene_cont.makeBunnyChooseController,
				'graphics': {'component': PB_templates.components['graphics']['bowie_graphics'], 'render layer': 'game'},
			},
		}, # templates
	},
	# 	{
	# 				# "Bunnies": ['pacbun'],
	# 				"Playing": True,
	# 				"Entities": {
	# 					'pacbun': {
	# 						'template': 'pacbun',
	# 						'init': """
	# self.setPos(game.level.getBunnyStarts()[0])
	# 												"""
	# 					},
	# 					'director':	{
	# 						'template': 'director',
	# 						'init': """
	# import director
	# self.controller_data.events= [
	# 	director.Delay(1.5),
	# 	game.message("
	# 	director.Spawn(spawns=[director.SpawnEntity(game.templates['pinkie'], Vec3(100,100,1), False, "Spawned bunny")]),
	# 	director.Delay(1.1),
	# 	director.Spawn(spawns=[director.SpawnEntity(game.templates['blue'], Vec3(110,100,1), False, "Spawned bunny")]),
	# 	director.Delay(0.9),
	# 	director.Spawn(spawns=[director.SpawnEntity(game.templates['bowie'], Vec3(120,100,1), False, "Spawned bunny")]),
	# ]
	# 						"""
	# 					}
	# 				},
	# 				"Message": "Poo. Everywhere.",
	# 				"Map": [
	# 					"HHHHHHHHHHHHHHHHHHHH",
	# 					"HHHHHHHHHHHHHHHHHHHH",
	# 					"HHHHHHHHHHHHHHHHHHHH",
	# 					"HHHHHHHHHHHHHHHHHHHH",
	# 					"HHHHHHHHHHHHHHHHHHHH",
	# 					"HHHHHHHHHHHHHHHHHHHH",
	# 					"B    OHHHHHHHHHHHHHH",
	# 					"HHHHHT##############",
	# 					"#####T##############",
	# 					"#####TTTTTTTTT######",
	# 					"##########T#########",
	# 					"##########T###HHHHHH",
	# 					"##########T###HO    ",
	# 					"##########T####T####",
	# 					"##########TTTTTT####",
	# 					"####################",
	# 					"####################",
	# 					"####################",
	# 				]
	# 			},
	"Poo. Everywhere": {
		"entities": {
			'director': {
				'template': 'director',
				'init': """
from director import *
import graphics

self.controller_data.events= [
						FadeToClearColor(graphics.Color.fromInts(219,182,85),2),
						Message("Poo.", Vec3(160,250,0), graphics.Color(1,1,1,1), 2, graphics.eAlign.centre),
						Delay(2.5),
						Message("Everywhere.", Vec3(160,250,0), graphics.Color(1,1,1,1), 2, graphics.eAlign.centre),
						]
""",
			},
		},
		'templates': {
		},
		"playing": True,
		"Map": [
			"HHHHHHHHHHHHHHHHHHHH",
			"HHHHHHHHHHHHHHHHHHHH",
			"HHHHHHHHHHHHHHHHHHHH",
			"HH   HHHHHHHHHH   HH",
			"HH H HHHHHHHHHH H HH",
			"HH  oHHHHHHHHHHo  HH",
			"HHHHHHHHHHHHHHHHHHHH",
			"HHHHHHHHHHHHHHHHHHHH",
			"HHHHHHHBBHBBHHHHHHHH",
			"HHHHHHHH   HHHHHHHHH",
			"HHHHHHHHH HHHHHHHHHH",
			"HHHHHHHHH HHHHHHHHHH",
			"HHHoHHHHH HHHHHHoHHH",
			"HHH HHHHH HHHHHH HHH",
			"HHH              HHH",
			"HHHHHHHHHHHHHHHHHHHH",
			"HHHHHHHHHHHHHHHHHHHH",
			"HHHHHHHHHHHHHHHHHHHH",
		]
	},
	"Introducing Foxes":{
		"Message":"Avoid the fox!",
		"playing": True,
		"entities": {},
		'templates': {
		},
		"Map": [
			"HHHHHHHHHHHHHHHHHHHH",
			"HHHHHHHHHHHHHHHHHHHH",
			"HHHHHHHHHHHHHHHHHHHH",
			"HHHHHHHBBBBoHHHHHHHH",
			"HHHHHHHHHHHHHHHHHHHH",
			"HHHHHHHHHHHHHHHHHHHH",
			"HHHHHHHHHHHHHHHHHHHH",
			"HHHHHHHHHHHHHHHHHHHH",
			"HHHHH        oHHHHHH",
			"HHHHH HHHHHH HHHHHHH",
			"HHHH            HHHH",
			"HHHH H HHHHH HH HHHH",
			"HHHH HoHHHHH HH HHHH",
			"HHHH HHHHHHH HH HHHH",
			"HHHH          1 HHHH",
			"HHHHHHHHHHHHHHHHHHHH",
			"HHHHHHHHHHHHHHHHHHHH",
			"HHHHHHHHHHHHHHHHHHHH",
		]
	},
	"Many foxes":{
		"Message":"Not all foxes think the same way...",
		"playing": True,
		"entities": {},
		'templates': {
		},
		"Map":[
			"HHHHHHHHHHHHHHHHHHHH",
			"H1                 H",
			"H HHHH HHHHHH HHHH H",
			"H oHHH HH       B  H",
			"H HHHH HH HHHoH HHHH",
			"H         B        H",
			"H HH HHHHHH HHHHHH H",
			"H HH HHH    HHHHHH H",
			"H HH HHH HHHHHHHHH H",
			"H 3H           BoH H",
			"HH H HHHHHHHHHH HH H",
			"HH H HHHHHHH    HH H",
			"H            HH HH H",
			"H HH HHHHHHH HH HH H",
			"H Ho      B     HH H",
			"H HHHHHHHHHHHHHHHH H",
			"H                 2H",
			"HHHHHHHHHHHHHHHHHHHH",
		]
	},
	"Open level":{
		"playing": True,
		"entities": {},
		'templates': {
		},
		"Message": "Poo on every path",
		"Map": [
			"HHHHHHHHHHHHHHHHHHHH",
			"H1                 H",
			"H HoHH HHHHHH HHHH H",
			"H HHHH HH          H",
			"H HHoH HH HHHHH HHHH",
			"H                  H",
			"H HH H HHHH HH HHH H",
			"H HH H      HH     H",
			"H HH H HHHHHHH HHH H",
			"H H            BoH H",
			"H H  HH HH HHHH HH H",
			"H H  HH HH H    HH H",
			"H            HH HH H",
			"H HH H HH HH HH HH H",
			"H Ho            HH H",
			"H HHHH HHHHHH HHHH H",
			"H                 2H",
			"HHHHHHHHHHHHHHHHHHHH",
		]},
}
