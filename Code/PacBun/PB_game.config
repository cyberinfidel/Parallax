import px_utility
import px_graphics

import PB_templates
import mode_cont
import PB_map

class Bunny(object):
	def __init__(self, handle, name, color):
		self.handle = handle
		self.name = name
		self.color = color

game = {
	'res_x' : 320,
	'res_y' : 288,
	'zoom' : 4,
	'fullscreen' :  False,
	'init_mode': 'title',
	'bunnies': px_utility.OrderedDict([
		['pacbun', Bunny('pacbun','PacBun', px_graphics.Color(1, 1, 0, 1),)],
		['pinkie', Bunny('pinkie', 'Pinkie',px_graphics.Color.fromInts(255, 200, 217, 255),)],
		['blue', Bunny('blue', 'Blue', px_graphics.Color.fromInts(73, 219, 255, 255),)],
		['bowie', Bunny( 'bowie', 'Bowie',px_graphics.Color(1, 1, 1, 1),)],
		['oreo', Bunny( 'oreo', 'Oreo', px_graphics.Color(1, 1, 1, 1),)],
		['dandelion', Bunny( 'dandelion', 'Dandelion',px_graphics.Color(0.6, 0.6, 0.6, 1),)],
		['brownie', Bunny( 'brownie', 'Brownie',px_graphics.Color(0.7, 0.3, 0, 1),)],
		['macaroon', Bunny( 'macaroon', 'Macaroon',px_graphics.Color(0.9, 0.4, 0.2, 1),)],
	]),
	'render layers' : {
		'game': {
			'texture atlas': {
				'size hint': 320,
				'file': False,
			},
		},
		'overlay': {
			'fonts': {
				'general': {
					'file': "Fonts/PacBun/PacBun.ttf",
					'size': 15,
				},
			},
			'texture atlas': False,
		},
	}, # end render layers
	'entities': { # entities that exist for the whole game

	}, # end entities
	'templates' : PB_templates.game_templates,
	# templates that exist for the whole game
	'modes' : {
		'title' : {
			'scenes':[
				"title",
				"high scores",
				"meet the bunnies",
			], # end scenes
			'entities': {  # these are entities that exist for the whole of the mode
				'title cont':{
					'template': 'title cont',
					'init': "self.setGamePad(self.game.input.getGamePad(0))"
				},
			},  # end entities
			'templates': {  # these are templates that exist for the whole of the mode
				'title cont': {
					'controller': mode_cont.makeTitleController,
				}
			},  # end templates
		},
		'new high score': {
			'scenes':[
				"new high score",
			], # end scenes
			'entities': {  # these are entities that exist for the whole of the mode

			},  # end entities
			'templates': {  # these are templates that exist for the whole of the mode

			},  # end templates
		},
		'bunny select': {
			'scenes': [
				'select bunnies',
				],
			"entities": {
				'bunny choice 0': {
					'template': 'bunny choice',
					'init': "self.setGamePad(self.game.input.getGamePad(0))",
					'data': {
						'this bun': 0
					},
				},
				# 'bunny choice 1': {
				# 	'template': 'bunny choice',
				# 	'init': "self.setGamePad(self.game.input.getGamePad(1))",
				# 	'data': {
				# 		'this bun': 1
				# 	},
				# },
			},  # entities
			'templates': {
				'bunny choice': {
					'controller': mode_cont.makeBunnyChoiceController,
				},
			},  # templates
		},
		# play #######################################################
		'play': {
			'scenes': [
				# "Poo. Everywhere",
				"Introducing Foxes",
				"Many foxes",
				"Open level"
			], # end scenes
			"entities": {
				'play controller': {
					'template': 'play controller',
					'init': 'self.setGamePad(self.game.input.getGamePad(0))'
				}
			},  # entities
			'templates': {
				'play controller': {
					'controller': mode_cont.makePlayController,
				},
				'map':{
					'controller': PB_map.makeController,
				},
			},  # templates
		}, # end select bunnies mode
		# quit #######################################################
		'quit':{
			'scenes': [
				'goodbye',
			],
			'entities': {  # these are entities that exist for the whole of the mode
				'quit cont': {
					'template': 'quit cont',
					'init': "self.setGamePad(self.game.input.getGamePad(0))"
				},
			},  # end entities
			'templates': {  # these are templates that exist for the whole of the mode
				'quit cont': {
					'controller': mode_cont.makeQuitController,
				},
			},  # end templates
		}, # end quit mode
	} # end modes
}
